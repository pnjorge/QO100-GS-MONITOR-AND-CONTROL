// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "39dxxxxx-77fe-xxxx-b0df-ddf17cxxxxxx";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onHighSWRlimitIOTChange();
void onOutputLED1Change();
void onOutputLED2Change();

String infoGPS;
float humidityBME280;
float inputCurrent;
float inputPower;
float pressureBME280;
float swr_Value_Full_IOT;
float temperatureBME280;
float vFWD_Value_Full_IOT;
float volts_12V_Value_Full_IOT;
float volts_28V_Value_Full_IOT;
float volts_5V1_Value_Full_IOT;
float volts_5V2_Value_Full_IOT;
float vREV_Value_Full_IOT;
int highSWRlimitIOT;
CloudLocation coordinatesIOT;
bool alarmLED;
bool inputSW1;
bool inputSW2;
bool outputLED1;
bool outputLED2;
bool triggerGS;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(infoGPS, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(humidityBME280, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(inputCurrent, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(inputPower, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(pressureBME280, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(swr_Value_Full_IOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(temperatureBME280, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(vFWD_Value_Full_IOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(volts_12V_Value_Full_IOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(volts_28V_Value_Full_IOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(volts_5V1_Value_Full_IOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(volts_5V2_Value_Full_IOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(vREV_Value_Full_IOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(highSWRlimitIOT, READWRITE, ON_CHANGE, onHighSWRlimitIOTChange);
  ArduinoCloud.addProperty(coordinatesIOT, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(alarmLED, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(inputSW1, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(inputSW2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(outputLED1, READWRITE, ON_CHANGE, onOutputLED1Change);
  ArduinoCloud.addProperty(outputLED2, READWRITE, ON_CHANGE, onOutputLED2Change);
  ArduinoCloud.addProperty(triggerGS, READ, ON_CHANGE, NULL);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
